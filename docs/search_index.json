[["index.html", "Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Section 1 Introduction 1.1 Attribution 1.2 Data access 1.3 Data processing", " Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Vijay Ramesh Pavithra Sundar Meghana P Srivathsa Laurel Symes Last compiled on 21 May, 2024 Section 1 Introduction This is the readable version that showcases analyses examining the drivers of diurnal variation in vocal activity for a tropical bird community. 1.1 Attribution Please contact the following in case of interest in the project. Vijay Ramesh (repo maintainer) Postdoctoral Research Associate, Cornell Lab of Ornithology 1.2 Data access The data used in this work will be archived on Zenodo. 1.3 Data processing The data processing for this project is described in the following sections. Navigate through them using the links in the sidebar. "],["data-cleaning.html", "Section 2 Data cleaning 2.1 Install required libraries 2.2 Loading acoustic data 2.3 Add standardized eBird species codes for future analysis 2.4 How much data has been annotated for dawn and dusk across sites and days? 2.5 More data cleaning 2.6 Write to file", " Section 2 Data cleaning In this script, we will ensure that the data is cleaned, and we create a single sheet for annotations at dawn and another sheet for annotations at dusk. 2.1 Install required libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(sf) library(raster) # for plotting library(scales) library(ggplot2) library(ggspatial) library(colorspace) 2.2 Loading acoustic data The acoustic data consists of annotations of 10-s chunks of audio files across summer and winter months. We will load annotation datasets for both dawn and dusk and process them further to ensure that we can quickly extract measures of vocal activity in future scripts. For the sake of future analysis, we define dawn as periods of acoustic data annotated between 6am and 10am. We define dusk as periods of acoustic data annotated between 4pm to 7pm. # These dawn and dusk annotation .csvs are not uploaded to GitHub and can be provided upon request # Please write to Vijay Ramesh if you would like to access the raw data - vr292@cornell.edu) # However, all outputs emerging from this script, which includes processed annotations are public and can be used for analysis # dawn data summer_dawn &lt;- read.csv(&quot;data/summer-dawn-annotations.csv&quot;) winter_dawn &lt;- read.csv(&quot;data/winter-dawn-annotations.csv&quot;) dawn &lt;- bind_rows(summer_dawn, winter_dawn) names(dawn) # reorder columns to ensure the species codes appear one after another dawn &lt;- dawn %&gt;% relocate(c(&quot;BFOW&quot;, &quot;SBEO&quot;, &quot;JUNI&quot;, &quot;ASKO&quot;, &quot;HSWO&quot;), .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dawn &lt;- separate(dawn, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dawn&quot;) # dusk data summer_dusk &lt;- read.csv(&quot;data/summer-dusk-annotations.csv&quot;) winter_dusk &lt;- read.csv(&quot;data/winter-dusk-annotations.csv&quot;) dusk &lt;- bind_rows(summer_dusk, winter_dusk) names(dusk) # reorder columns to ensure the species codes appear one after another dusk &lt;- dusk %&gt;% relocate(&quot;GREN&quot;, .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dusk &lt;- separate(dusk, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dusk&quot;) # create a single dataframe acoustic_data &lt;- bind_rows(dawn, dusk) 2.3 Add standardized eBird species codes for future analysis species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) ## Using the splice operator from an example on stackOverflow ## https://stackoverflow.com/questions/60113369/change-column-names-in-dataframe-based-on-matching-to-another-dataframe-by-dplyr eBirdCodes &lt;- species_codes %&gt;% dplyr::select(eBird_codes, species_annotation_codes) %&gt;% deframe() # replace current annotation codes with eBird codes acoustic_data &lt;- acoustic_data %&gt;% rename(!!!eBirdCodes) 2.4 How much data has been annotated for dawn and dusk across sites and days? # we observe that OLCAP5B has the least amount of data annotated (~3 unique days/visits) at dawn dawnSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) # we observe that OLCAP5B has the least amount of data annotated (~3 unique visits) duskSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) 2.5 More data cleaning Removing NAs and renaming columns # Here, we pivot the data to long format and remove NA/zero values or missing data acoustic_data &lt;- acoustic_data %&gt;% group_by(site_id, date, time, splits, time_of_day, restoration_type) %&gt;% transform() %&gt;% replace(is.na(.), 0) %&gt;% summarise_at(.vars = vars(c(&quot;compea&quot;:&quot;grenig1&quot;)), .funs = sum) %&gt;% pivot_longer(cols = compea:grenig1, names_to = &quot;eBird_codes&quot;, values_to = &quot;number&quot;) %&gt;% filter(number != 0) # one way to remove zeros # rename the `time` column as `start_time` to distinguish from `time_of_day` acoustic_data &lt;- acoustic_data %&gt;% rename(., start_time = time) # add hourOfDay column to indicate time-windows for when the acoustic-visit was started acoustic_data &lt;- acoustic_data %&gt;% mutate( hour_of_day = case_when( start_time &gt;= &quot;060000&quot; &amp; start_time &lt; &quot;070000&quot; ~ &quot;6AM to 7AM&quot;, start_time &gt;= &quot;070000&quot; &amp; start_time &lt; &quot;080000&quot; ~ &quot;7AM to 8AM&quot;, start_time &gt;= &quot;080000&quot; &amp; start_time &lt; &quot;090000&quot; ~ &quot;8AM to 9AM&quot;, start_time &gt;= &quot;090000&quot; &amp; start_time &lt;= &quot;100000&quot; ~ &quot;9AM to 10AM&quot;, start_time &gt;= &quot;160000&quot; &amp; start_time &lt; &quot;170000&quot; ~ &quot;4PM to 5PM&quot;, start_time &gt;= &quot;170000&quot; &amp; start_time &lt;= &quot;180000&quot; ~ &quot;5PM to 6PM&quot;, start_time &gt;= &quot;180000&quot; &amp; start_time &lt;= &quot;190000&quot; ~ &quot;6PM to 7PM&quot;)) %&gt;% ungroup() # add a zero before the start_time to ensure its all 6 digits of time atleast acoustic_data &lt;- acoustic_data %&gt;% mutate(across(start_time, str_pad, width = 6, pad = &quot;0&quot;)) # keep only species that vocalize atleast across a minimum of 20 different/unique dates and times # we chose this random arbitrary threshold to include only species that are highly vocal and can be used for comparative analyses spp_subset &lt;- acoustic_data %&gt;% group_by(site_id, date, eBird_codes) %&gt;% summarise(unique_voc = sum(number)) %&gt;% ungroup() # keep only species with n &gt; 20 spp_subset &lt;- spp_subset %&gt;% group_by(eBird_codes) %&gt;% summarise(n = n()) %&gt;% filter(n &gt; 20) ## subset to only include species that were detected atleast across 20 unique data/time combinations acoustic_data &lt;- acoustic_data %&gt;% filter(eBird_codes %in% spp_subset$eBird_codes) ## Only 69 species remain after including highly vocal species alone 2.6 Write to file write.csv(acoustic_data, &quot;results/acoustic_data.csv&quot;, row.names = F) "],["vocal-activity.html", "Section 3 Vocal activity 3.1 Install necessary libraries 3.2 Load acoustic data and species scientific names data 3.3 Vocal activity across time periods", " Section 3 Vocal activity In this script, we examine differences in vocal activity between dawn and dusk for each species. 3.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) 3.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 3.3 Vocal activity across time periods A number of factors need to be considered in further analysis: accounting for time_of_day, observed_identity for example. However, we run analyses that account for differences in calling activity by species for dawn and dusk. # total number of acoustic detections summarized across every 10-s audio file vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections =sum(detections)) %&gt;% mutate(percent_detections = (detections/total_detections)*100) %&gt;% ungroup() # for the sake of plotting, we will create a new variable vocal_act$plot_percent &lt;- ifelse(vocal_act$time_of_day == &quot;dawn&quot;, -1*vocal_act$percent_detections, vocal_act$percent_detections) # figure of percent detections fig_percent_detections &lt;- ggplot(vocal_act, aes( x = reorder(common_name, desc(common_name)), y = plot_percent, fill = time_of_day)) + geom_text(aes(label=signif(abs(plot_percent),3)), hjust = ifelse(vocal_act$plot_percent &gt;= 0, 0, 1), size = 3) + geom_bar(stat = &quot;identity&quot;) + scale_fill_manual(values = c(&quot;#d95f02&quot;,&quot;#1b9e77&quot;)) + scale_y_continuous(labels=abs) + coord_flip() + labs(y = &#39;% Acoustic detections (across dawn and dusk)&#39;, x = &#39;Common name&#39;) + theme_bw() + theme(text = element_text(family = &quot;Century Gothic&quot;, size = 10, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;)) ggsave(fig_percent_detections, filename = &quot;figs/fig_percentDetections_species.png&quot;, width = 14, height = 18, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() % acoustic detections for each species between dawn and dusk "],["frequency.html", "Section 4 Frequency 4.1 Install necessary libraries 4.2 Load acoustic data and species scientific names data 4.3 Vocal activity data 4.4 Frequency data 4.5 Visualization of % detections vs. median peak frequency", " Section 4 Frequency In this script, we examine differences in vocal activity between dawn and dusk for each species as a function of frequency. The expectation is that higher frequency vocalizers would call more at dawn compared to dusk, owing to better signal transmission in the morning. 4.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) 4.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) freq &lt;- read.csv(&quot;data/frequency-data.csv&quot;) 4.3 Vocal activity data # total number of acoustic detections summarized across every 10-s audio file vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections =sum(detections)) %&gt;% mutate(percent_detections = (detections/total_detections)*100) %&gt;% ungroup() 4.4 Frequency data We will extract the median peak frequency for each species. Note: For a total of 114 species, template recordings (varying from a minimum of 2 templates to 1910 templates per species) was extracted by Meghana P Srivathsa. While extracting median peak frequency, no distinction was made between songs and calls. We removed species that had very few templates (we only kept species that had a minimum of 10 frequency related measures). # add standardized eBird codes to the frequency data freq &lt;-left_join (freq, species_codes[c(3,5)], by = &quot;species_annotation_codes&quot;) # Only a total of 99 species are left after filtering species with very few templates nTemplates_5 &lt;- freq %&gt;% group_by(eBird_codes) %&gt;% count() %&gt;% filter(n &gt;= 5) %&gt;% drop_na() # left-join to remove species with less than 10 templates in the frequency dataset freq_5 &lt;- left_join(nTemplates_5[,1], freq) # calculate median peak frequency median_pf &lt;- freq_5 %&gt;% group_by(eBird_codes) %&gt;% summarise(median_peak_freq = median(peak_freq_in_Hz)) ## join the frequency data to the vocal activity data voc_freq &lt;- left_join(vocal_act, median_pf, by = &quot;eBird_codes&quot;) %&gt;% drop_na() # A total of 66 species were included and three species were excluded due to lack of data. 4.5 Visualization of % detections vs. median peak frequency Here, we model the % of detections at dawn as a function of median peak frequency. # we will filter the data to only include dawn dawn &lt;- voc_freq %&gt;% mutate(log_freq = log10(median_peak_freq)) %&gt;% filter(time_of_day == &quot;dawn&quot;) # the only species that was excluded above was pied bushchat, which was reported only from dusk fig_freq_vocAct &lt;- ggplot(dawn, aes(x=log_freq, y= percent_detections)) + geom_point(shape = 21, colour = &quot;black&quot;, fill = &quot;white&quot;, size = 2, stroke = 1)+ geom_smooth(method=&quot;lm&quot;, se=TRUE, fullrange=FALSE, level=0.95,linetype=&quot;solid&quot;) + theme_bw() + stat_regline_equation(label.x = 2.4, aes(label = ..eq.label..), label.y = 25, size = 8) + stat_regline_equation(label.x = 2.8, aes(label = ..rr.label..), label.y = 25, size = 8) + labs(y=&quot;\\n % Acoustic detections at Dawn&quot;, x=&quot; log (Median Peak Frequency)\\n&quot;) + geom_text_repel(aes(label = common_name), family = &quot;Century Gothic&quot;, fontface = &quot;italic&quot;) + theme(text = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;)) ggsave(fig_freq_vocAct, filename = &quot;figs/fig_peakFrequency_vs_dawnDetections.png&quot;, width = 14, height = 16, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() % acoustic detections at dawn vs. median peak frequency shows no significant relationship "],["light-availability.html", "Section 5 Light availability 5.1 Install necessary libraries 5.2 Load acoustic data and species scientific names data 5.3 Extract light availability for each date 5.4 Model acoustic detections as a function of light availability", " Section 5 Light availability In this script, we examine differences in vocal activity between dawn and dusk as a function of light availability. The expectation is that species would call much earlier in the day, closer to sunrise compared to later in the day when one could spend time foraging. 5.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(suncalc) library(lutz) library(stringr) library(ggpmisc) library(ggpubr) library(hms) 5.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) sites &lt;- read.csv(&quot;data/list-of-sites.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 5.3 Extract light availability for each date # add longitude and latitude to acoustic_data acoustic_data &lt;- left_join(acoustic_data, sites[,c(2,4,5)], by = &quot;site_id&quot;) acoustic_data$date &lt;- lubridate::ymd(acoustic_data$date) names(acoustic_data)[c(10,11)] &lt;- c(&quot;lon&quot;,&quot;lat&quot;) # find out what time zone needs to be provided for the sunlight calculations acoustic_data$tz &lt;- tz_lookup_coords(lat = acoustic_data$lat, lon = acoustic_data$lon, method = &quot;accurate&quot;, warn = FALSE) # extract nauticalDawn, nauticalDusk, sunrise and sunset times light_data &lt;- getSunlightTimes(data = acoustic_data, keep = c(&quot;sunrise&quot;,&quot;sunset&quot;, &quot;nauticalDawn&quot;, &quot;nauticalDusk&quot;), tz = &quot;Asia/Kolkata&quot;) %&gt;% distinct(.) # strip dates from new columms and keep only time light_data$sunrise &lt;- as_hms(light_data$sunrise) light_data$sunset &lt;- as_hms(light_data$sunset) light_data$nauticalDawn &lt;- as_hms(light_data$nauticalDawn) light_data$nauticalDusk &lt;- as_hms(light_data$nauticalDusk) # format the start_time column in the acoustic data to keep it as the same format as light_data acoustic_data &lt;- acoustic_data %&gt;% mutate(across(start_time, str_pad, width = 6, pad = &quot;0&quot;)) acoustic_data$start_time&lt;- format(strptime(acoustic_data$start_time, format = &quot;%H%M%S&quot;), format = &quot;%H:%M:%S&quot;) acoustic_data$start_time &lt;- as_hms(acoustic_data$start_time) # summarize detections of species for every 15-min window acoustic_data &lt;- acoustic_data %&gt;% group_by(site_id, date, start_time, time_of_day, eBird_codes, lon, lat) %&gt;% summarise(detections = sum(number)) %&gt;% ungroup() # join the two datasets acoustic_data &lt;- left_join(acoustic_data, light_data, by = c(&quot;date&quot;,&quot;lon&quot;,&quot;lat&quot;)) # subtract times from sunrise, sunset, nauticalDawn and nauticalDusk from start_time of acoustic detections acoustic_data &lt;- acoustic_data %&gt;% mutate(time_from_dawn = as.numeric((start_time - nauticalDawn), units = &quot;hours&quot;)) %&gt;% mutate(time_from_sunrise = as.numeric((start_time - sunrise), units = &quot;hours&quot;)) %&gt;% mutate(time_to_dusk = as.numeric((nauticalDusk-start_time), units = &quot;hours&quot;)) %&gt;% mutate(time_to_sunset = as.numeric((sunset-start_time), units = &quot;hours&quot;)) 5.4 Model acoustic detections as a function of light availability Here, we choose times of day as proxies for light availability (ie. nautical dawn, dusk for example). # Here, we make the assumption that light levels are fairly similar closer to dawn and closer to dusk. Hence, we model the number of acoustic detections as a function of time to dusk and time from dawn. # add species_codes/common_name to the above dataset acoustic_data &lt;- acoustic_data %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% ungroup() # visualization plots &lt;- list() for(i in 1:length(unique(acoustic_data$common_name))) { # extract species common_name a &lt;- unique(acoustic_data$common_name)[i] # subset data for plotting sp &lt;- acoustic_data[acoustic_data$common_name==a,] # bind dawn and dusk data together dawn &lt;- sp %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(detections, time_from_dawn, time_of_day) %&gt;% rename(., time_from_startTime = time_from_dawn) dusk &lt;- sp %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(detections, time_to_dusk, time_of_day) %&gt;% rename(., time_from_startTime = time_to_dusk) data &lt;- bind_rows(dawn, dusk) plots[[i]] &lt;- ggplot(data, aes(x= time_from_startTime, y= detections, fill = time_of_day)) + geom_point(shape = 21, aes(fill = time_of_day), size = 2, stroke = 1, alpha = 0.7)+ geom_smooth(method=&quot;lm&quot;, se=TRUE, fullrange=FALSE, level=0.95,linetype=&quot;solid&quot;, aes(color = time_of_day)) + scale_fill_manual(values = c(&quot;#d95f02&quot;,&quot;#1b9e77&quot;))+ scale_color_manual(values = c(&quot;#d95f02&quot;,&quot;#1b9e77&quot;)) + theme_bw() + labs(title = a, subtitle = &quot;Each dot represents the total number of detections after dawn or before dusk (in hours)&quot;, y=&quot;\\n Number of acoustic detections&quot;, x=&quot;Time from Dawn and time to dusk (in hours)\\n&quot;) + theme(text = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;italic&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;)) } # save as a single pdf cairo_pdf( filename = &quot;figs/light-availability-acoustic-detections-by-species.pdf&quot;, width = 13, height = 12, onefile = TRUE ) plots dev.off() "],["territoriality.html", "Section 6 Territoriality 6.1 Loading necessary libraries 6.2 Loading territoriality data 6.3 Load acoustic data and species scientific names data 6.4 Vocal activity data 6.5 Join the vocal_activity data and territoriality data 6.6 Testing the differences using Wilcoxon test 6.7 Visualization of % detections vs. territoriality", " Section 6 Territoriality In this script, we examine differences in vocal activity between dawn and dusk for each species in terms of their territoriality. The expectation is that highly territorial species would have a higher vocal activity, irrespective of dawn or dusk, than weakly and non-territorial species. Highly territorial species are those which defend and maintain their territories throughout the year. Weakly territorial species are those which have broadly overlapping home ranges, or sometimes join mixed flocks without defined spatial ranges. Non-territorial species are those which do not defend territories, or defend very small areas around nest sites, or defend song or display posts only. 6.1 Loading necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) library(ggdist) library(gghalves) library(rstatix) 6.2 Loading territoriality data territoriality &lt;- read.csv(&quot;data/territoriality-data.csv&quot;) territoriality &lt;- territoriality %&gt;% dplyr::select (Species, Territory) colnames (territoriality) &lt;- c(&quot;scientific_name&quot;, &quot;territory&quot;) # Updating the scientific names of following species as per our dataset: # Flame-throated bulbul- Rubigula gularis (earlier Pycnonotus gularis) # Black eagle- Ictinaetus malaiensis (earlier Ictinaetus malayensis) # Brown-capped pygmy woodpecker- Yungipicus nanus (earlier Dendrocopos nanus) # Malabar barbet- Psilopogon malabaricus (earlier Megalaima malabarica) # Dark-fronted babbler- Dumetia atriceps (earlier Rhopocichla atriceps) # Greater flameback- Chrysocolaptes guttacristatus (earlier Chrysocolaptes lucidus) # Indian blue robin- Larvivora brunnea (earlier Luscinia brunnea) # Indian yellow tit- Machlolophus aplonotus (earlier Parus aplonotus) # Jungle babbler- Argya striata (earlier Turdoides striata) # Orange-headed thrush- Geokichla citrina (earlier Zoothera citrina) # Rufous babbler- Argya subrufa (earlier Turdoides subrufa) # Rufous woodpecker- Micropternus brachyurus (earlier Celeus brachyurus) # Rusty-tailed flycatcher- Ficedula ruficauda (earlier Muscicapa ruficauda # Spot-bellied eagle owl- Ketupa nipalensis (earlier Bubo nipalensis) # Spotted dove- Spilopelia chinensis (earlier Stigmatopelia chinensis) # Square-tailed bulbul- Hypsipetes ganeesa ganeesa (earlier Hypsipetes ganeesa) # Thick-billed warbler- Arundinax aedon (earlier Acrocephalus aedon) # White-bellied flycatcher- Cyornis pallidipes (earlier Cyornis pallipes) # White-cheeked barbet- Psilopogon viridis (earlier Megalaima viridis) # Wayanad laughingthrush- Pterorhinus delesserti (earlier Garrulax delesserti) # Yellow-browed bulbul- Iole indica (earlier Acritillas indica) territoriality &lt;- territoriality %&gt;% mutate(scientific_name = recode (scientific_name, &#39;Pycnonotus gularis&#39; = &#39;Rubigula gularis&#39;, &#39;Ictinaetus malayensis&#39; = &#39;Ictinaetus malaiensis&#39;, &#39;Dendrocopos nanus&#39; = &#39;Yungipicus nanus&#39;, &#39;Megalaima malabarica&#39; = &#39;Psilopogon malabaricus&#39;, &#39;Rhopocichla atriceps&#39; = &#39;Dumetia atriceps&#39;, &#39;Chrysocolaptes lucidus&#39; = &#39;Chrysocolaptes guttacristatus&#39;, &#39;Luscinia brunnea&#39; = &#39;Larvivora brunnea&#39;, &#39;Parus aplonotus&#39; = &#39;Machlolophus aplonotus&#39;, &#39;Turdoides striata&#39; = &#39;Argya striata&#39;, &#39;Zoothera citrina&#39; = &#39;Geokichla citrina&#39;, &#39;Turdoides subrufa&#39; = &#39;Argya subrufa&#39;, &#39;Celeus brachyurus&#39; = &#39;Micropternus brachyurus&#39;, &#39;Muscicapa ruficauda&#39; = &#39;Ficedula ruficauda&#39;, &#39;Bubo nipalensis&#39; = &#39;Ketupa nipalensis&#39;, &#39;Stigmatopelia chinensis&#39; = &#39;Spilopelia chinensis&#39;, &#39;Hypsipetes ganeesa&#39; = &#39;Hypsipetes ganeesa ganeesa&#39;, &#39;Acrocephalus aedon&#39; = &#39;Arundinax aedon&#39;, &#39;Cyornis pallipes&#39; = &#39;Cyornis pallidipes&#39;, &#39;Megalaima viridis&#39; = &#39;Psilopogon viridis&#39;, &#39;Garrulax delesserti&#39; = &#39;Pterorhinus delesserti&#39;, &#39;Acritillas indica&#39; = &#39;Iole indica&#39; )) 6.3 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 6.4 Vocal activity data # total number of acoustic detections summarized across every 10-s audio file vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections =sum(detections)) %&gt;% mutate(percent_detections = (detections/total_detections)*100) %&gt;% ungroup() 6.5 Join the vocal_activity data and territoriality data vocal_act &lt;- vocal_act %&gt;% left_join(territoriality, by = &#39;scientific_name&#39;) %&gt;% dplyr::mutate(territory_cat = case_when (territory %in% &#39;3&#39; ~&#39;Highly territorial&#39;, territory %in% &#39;2&#39; ~ &#39;Weakly territorial&#39;, territory %in% &#39;1&#39; ~&#39;Non-territorial&#39;)) 6.6 Testing the differences using Wilcoxon test Here, we see whether there are differences in the vocal activity among highly territorial, weakly territorial and non-territorial species in dawn and dusk individually. stat.test &lt;- vocal_act %&gt;% group_by(time_of_day) %&gt;% wilcox_test(percent_detections ~ territory_cat) There are 19 highly territorial, 11 non-territorial and 39 weakly territorial species in dawn, and 19 highly territorial, 11 non-territorial, and 36 weakly territorial species in dusk. 6.7 Visualization of % detections vs. territoriality fig_terr_vocAct &lt;- ggplot(vocal_act, aes(x = territory_cat, y = percent_detections, fill = territory_cat)) + geom_boxplot( width = .2, size = 1.5, outlier.shape = NA ) + gghalves::geom_half_point( side = &quot;l&quot;, range_scale = .3, alpha = .5, size = 3 ) + labs(x = &quot;&quot;, y = &quot;Percent detections&quot;, fill = &quot;Territoriality Category&quot;) + facet_grid (~time_of_day) + geom_signif(comparisons = list(c(&quot;Highly territorial&quot;, &quot;Weakly territorial&quot;), c(&quot;Weakly territorial&quot;, &quot;Non-territorial&quot;), c(&quot;Non-territorial&quot;, &quot;Highly territorial&quot;)), map_signif_level = c(&quot;***&quot;=0.001,&quot;**&quot;=0.01, &quot;*&quot;=0.05, &quot; &quot;=2), textsize = 5)+ scale_color_manual(name = &quot;Territoriality&quot;, values = c(&quot;#0072B2&quot;, &quot;#D55E00&quot;, &quot;#CC79A7&quot;),labels=c(&#39;Highly territorial&#39;, &#39;Non-territorial&#39;, &#39;Weakly territorial&#39;))+ scale_fill_manual(name = &quot;Territoriality&quot;, values = c(&quot;#0072B2&quot;, &quot;#D55E00&quot;, &quot;#CC79A7&quot;), labels=c(&#39;Highly territorial&#39;, &#39;Non-territorial&#39;, &#39;Weakly territorial&#39;)) + theme_bw()+ theme(legend.position = &quot;none&quot;)+ theme(text = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;italic&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;)) ggsave(fig_terr_vocAct, filename = &quot;figs/fig_territoriality_vs_perecentDetections.png&quot;, width = 14, height = 16, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() There are significant differences (p = 0.039) in % acoustic detections between weakly and non-territorial species in dawn. No other significant differences observed. "],["sociality.html", "Section 7 Sociality 7.1 Loading necessary libraries 7.2 Loading sociality data 7.3 Load acoustic data and species scientific names data 7.4 Vocal activity data 7.5 Join the vocal_activity data and sociality data 7.6 Testing the differences using Wilcoxon test 7.7 Visualization of % detections vs. sociality", " Section 7 Sociality In this script, we examine differences in vocal activity between dawn and dusk for each species in terms of their sociality. The expectation is that communal signallers would have a higher vocal activity, irrespective of dawn or dusk, than non-communal signallers. Communal signallers are species that produce long-range acoustic signals in groups, either duets (two individuals) or choruses (three or more individuals) by both males and females. Non-communal signallers are species that sing as single individuals and not communally. 7.1 Loading necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) library(ggdist) library(gghalves) library(rstatix) 7.2 Loading sociality data sociality &lt;- read.csv(&quot;data/sociality-data.csv&quot;) sociality &lt;- sociality %&gt;% dplyr::select (Species, Communal) colnames (sociality) &lt;- c(&quot;scientific_name&quot;, &quot;sociality&quot;) # Updating the scientific names of following species as per our dataset: # Flame-throated bulbul- Rubigula gularis (earlier Pycnonotus gularis) # Black eagle- Ictinaetus malaiensis (earlier Ictinaetus malayensis) # Brown-capped pygmy woodpecker- Yungipicus nanus (earlier Dendrocopos nanus) # Malabar barbet- Psilopogon malabaricus (earlier Megalaima malabarica) # Dark-fronted babbler- Dumetia atriceps (earlier Rhopocichla atriceps) # Greater flameback- Chrysocolaptes guttacristatus (earlier Chrysocolaptes lucidus) # Indian blue robin- Larvivora brunnea (earlier Luscinia brunnea) # Indian yellow tit- Machlolophus aplonotus (earlier Parus aplonotus) # Jungle babbler- Argya striata (earlier Turdoides striata) # Orange-headed thrush- Geokichla citrina (earlier Zoothera citrina) # Rufous babbler- Argya subrufa (earlier Turdoides subrufa) # Rufous woodpecker- Micropternus brachyurus (earlier Celeus brachyurus) # Rusty-tailed flycatcher- Ficedula ruficauda (earlier Muscicapa ruficauda # Spot-bellied eagle owl- Ketupa nipalensis (earlier Bubo nipalensis) # Spotted dove- Spilopelia chinensis (earlier Stigmatopelia chinensis) # Square-tailed bulbul- Hypsipetes ganeesa ganeesa (earlier Hypsipetes ganeesa) # Thick-billed warbler- Arundinax aedon (earlier Acrocephalus aedon) # White-bellied flycatcher- Cyornis pallidipes (earlier Cyornis pallipes) # White-cheeked barbet- Psilopogon viridis (earlier Megalaima viridis) # Wayanad laughingthrush- Pterorhinus delesserti (earlier Garrulax delesserti) # Yellow-browed bulbul- Iole indica (earlier Acritillas indica) sociality &lt;- sociality %&gt;% mutate(scientific_name = recode (scientific_name, &#39;Pycnonotus gularis&#39; = &#39;Rubigula gularis&#39;, &#39;Ictinaetus malayensis&#39; = &#39;Ictinaetus malaiensis&#39;, &#39;Dendrocopos nanus&#39; = &#39;Yungipicus nanus&#39;, &#39;Megalaima malabarica&#39; = &#39;Psilopogon malabaricus&#39;, &#39;Rhopocichla atriceps&#39; = &#39;Dumetia atriceps&#39;, &#39;Chrysocolaptes lucidus&#39; = &#39;Chrysocolaptes guttacristatus&#39;, &#39;Luscinia brunnea&#39; = &#39;Larvivora brunnea&#39;, &#39;Parus aplonotus&#39; = &#39;Machlolophus aplonotus&#39;, &#39;Turdoides striata&#39; = &#39;Argya striata&#39;, &#39;Zoothera citrina&#39; = &#39;Geokichla citrina&#39;, &#39;Turdoides subrufa&#39; = &#39;Argya subrufa&#39;, &#39;Celeus brachyurus&#39; = &#39;Micropternus brachyurus&#39;, &#39;Muscicapa ruficauda&#39; = &#39;Ficedula ruficauda&#39;, &#39;Bubo nipalensis&#39; = &#39;Ketupa nipalensis&#39;, &#39;Stigmatopelia chinensis&#39; = &#39;Spilopelia chinensis&#39;, &#39;Hypsipetes ganeesa&#39; = &#39;Hypsipetes ganeesa ganeesa&#39;, &#39;Acrocephalus aedon&#39; = &#39;Arundinax aedon&#39;, &#39;Cyornis pallipes&#39; = &#39;Cyornis pallidipes&#39;, &#39;Megalaima viridis&#39; = &#39;Psilopogon viridis&#39;, &#39;Garrulax delesserti&#39; = &#39;Pterorhinus delesserti&#39;, &#39;Acritillas indica&#39; = &#39;Iole indica&#39; )) 7.3 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) 7.4 Vocal activity data # total number of acoustic detections summarized across every 10-s audio file vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections =sum(detections)) %&gt;% mutate(percent_detections = (detections/total_detections)*100) %&gt;% ungroup() 7.5 Join the vocal_activity data and sociality data vocal_act &lt;- vocal_act %&gt;% left_join(sociality, by = &#39;scientific_name&#39;) %&gt;% dplyr::mutate(sociality_cat = case_when (sociality %in% &#39;0&#39; ~ &#39;Non-communal signallers&#39;, sociality %in% &#39;1&#39; ~ &#39;Communal signallers&#39;)) 7.6 Testing the differences using Wilcoxon test Here, we see whether there are differences in the vocal activity between communal and non-communal signallers in dawn and dusk individually. stat.test &lt;- vocal_act %&gt;% group_by (time_of_day) %&gt;% wilcox_test (percent_detections ~ sociality_cat) There are 78 non-communal signallers and 21 communal signallers in dawn, and 69 non-communal and 20 communal signallers in dusk. 7.7 Visualization of % detections vs. sociality fig_soc_vocAct &lt;- ggplot(vocal_act, aes(x = sociality_cat, y = percent_detections, fill = sociality_cat)) + geom_boxplot( width = .2, size = 1.5, outlier.shape = NA ) + gghalves::geom_half_point( side = &quot;l&quot;, range_scale = .3, alpha = .5, size = 3 ) + labs(x = &quot;&quot;, y = &quot;Percent detections&quot;, fill = &quot;Sociality Category&quot;) + facet_grid (~time_of_day) + geom_signif(comparisons = list(c(&quot;Non-communal signallers&quot;, &quot;Communal Signallers&quot;)), map_signif_level = c(&quot;***&quot;=0.001,&quot;**&quot;=0.01, &quot;*&quot;=0.05, &quot; &quot;=2), textsize = 5)+ scale_color_manual(name = &quot;Sociality&quot;, values = c(&quot;#0072B2&quot;, &quot;#D55E00&quot;),labels=c(&#39;Non-communal signallers&#39;, &#39;Communal Signallers&#39;))+ scale_fill_manual(name = &quot;Sociality&quot;, values = c(&quot;#0072B2&quot;, &quot;#D55E00&quot;), labels=c(&#39;Non-communal signallers&#39;, &#39;Communal Signallers&#39;)) + theme_bw()+ theme(legend.position = &quot;none&quot;)+ theme(text = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;italic&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;)) ggsave(fig_soc_vocAct, filename = &quot;figs/fig_sociality_vs_percentDetections.png&quot;, width = 14, height = 16, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() There are no significant differences in % acoustic detections between communal and non-communal signllers in both dawn and dusk. "],["trophic-niche.html", "Section 8 Trophic niche 8.1 Install necessary libraries 8.2 Load acoustic data and species scientific names data 8.3 Vocal activity data 8.4 Join the vocal_activity data and species trait data 8.5 Visualization of % detections vs. trophic niche", " Section 8 Trophic niche Here, we ask if species of a certain foraging guild have higher vocal activity at dawn compared to dusk. Our null hypothesis/expectation is that there would be no differences in vocal activity across foraging guilds irrespective of time of day. 8.1 Install necessary libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(ggstatsplot) library(ggpubr) library(ggrepel) library(patchwork) library(rstatix) 8.2 Load acoustic data and species scientific names data acoustic_data &lt;- read.csv(&quot;results/acoustic_data.csv&quot;) species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) trait &lt;- read.csv(&quot;data/species-trait-dat.csv&quot;) 8.3 Vocal activity data # total number of acoustic detections summarized across every 10-s audio file vocal_act &lt;- acoustic_data %&gt;% group_by(time_of_day, eBird_codes) %&gt;% summarise(detections = sum(number)) %&gt;% left_join(., species_codes[,c(1,2,5)], by = &quot;eBird_codes&quot;) %&gt;% group_by(eBird_codes) %&gt;% mutate(total_detections =sum(detections)) %&gt;% mutate(percent_detections = (detections/total_detections)*100) %&gt;% ungroup() 8.4 Join the vocal_activity data and species trait data vocal_act &lt;- vocal_act %&gt;% left_join(trait[,c(1,2,29)], by = c(&#39;scientific_name&#39;, &#39;common_name&#39;)) ## remove species that are poorly represented by a particular trophic niche ## we get rid of nectarivore species, aquatic predator and granivore vocal_act &lt;- vocal_act %&gt;% filter(trophic_niche != &quot;Aquatic predator&quot;) %&gt;% filter(trophic_niche != &quot;Granivore&quot;) %&gt;% filter(trophic_niche != &quot;Nectarivore&quot;) ## We retained 65 out of 69 species after the above filters 8.5 Visualization of % detections vs. trophic niche fig_trophicNiche_vocAct &lt;- vocal_act %&gt;% grouped_ggbetweenstats(x = time_of_day, y = percent_detections, grouping.var = trophic_niche, xlab = &quot;Trophic Niche&quot;, ylab = &quot;% Acoustic Detections&quot;, pairwise.display = &quot;significant&quot;, package = &quot;ggsci&quot;, palette = &quot;default_jco&quot;, violin.args = list(width = 0), ggplot.component = list(theme(text = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;),plot.title = element_text(family = &quot;Century Gothic&quot;, size = 18, face = &quot;bold&quot;), plot.subtitle = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;,color=&quot;#1b2838&quot;), axis.title = element_text(family = &quot;Century Gothic&quot;, size = 15, face = &quot;bold&quot;)))) ggsave(fig_trophicNiche_vocAct, filename = &quot;figs/fig_percentDetections_trophicNiche.png&quot;, width = 14, height = 16, device = png(), units = &quot;in&quot;, dpi = 300) dev.off() % acoustic detections at dawn and dusk across foraging guilds "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
