[["index.html", "Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Section 1 Introduction 1.1 Attribution 1.2 Data access 1.3 Data processing", " Source code and supporting information for Drivers of diurnal variation in vocal activity in a tropical bird community Vijay Ramesh Pavithra Sundar Meghana P Srivathsa Laurel Symes Last compiled on 30 April, 2024 Section 1 Introduction This is the readable version that showcases analyses examining the drivers of diurnal variation in vocal activity for a tropical bird community. 1.1 Attribution Please contact the following in case of interest in the project. Vijay Ramesh (repo maintainer) Postdoctoral Research Associate, Cornell Lab of Ornithology 1.2 Data access The data used in this work will be archived on Zenodo. 1.3 Data processing The data processing for this project is described in the following sections. Navigate through them using the links in the sidebar. "],["data-cleaning.html", "Section 2 Data cleaning 2.1 Install required libraries 2.2 Loading acoustic data 2.3 Add standardized eBird species codes for future analysis 2.4 How much data has been annotated for dawn and dusk across sites and days? 2.5 More data cleaning 2.6 Write to file", " Section 2 Data cleaning In this script, we will ensure that the data is cleaned, and we create a single sheet for annotations at dawn and another sheet for annotations at dusk. 2.1 Install required libraries library(tidyverse) library(dplyr) library(stringr) library(vegan) library(ggplot2) library(scico) library(data.table) library(extrafont) library(sf) library(raster) # for plotting library(scales) library(ggplot2) library(ggspatial) library(colorspace) 2.2 Loading acoustic data The acoustic data consists of annotations of 10-s chunks of audio files across summer and winter months. We will load annotation datasets for both dawn and dusk and process them further to ensure that we can quickly extract measures of vocal activity in future scripts. For the sake of future analysis, we define dawn as periods of acoustic data annotated between 6am and 10am. We define dusk as periods of acoustic data annotated between 4pm to 7pm. # These dawn and dusk annotation .csvs are not uploaded to GitHub and can be provided upon request # Please write to Vijay Ramesh if you would like to access the raw data - vr292@cornell.edu) # However, all outputs emerging from this script, which includes processed annotations are public and can be used for analysis # dawn data summer_dawn &lt;- read.csv(&quot;data/summer-dawn-annotations.csv&quot;) winter_dawn &lt;- read.csv(&quot;data/winter-dawn-annotations.csv&quot;) dawn &lt;- bind_rows(summer_dawn, winter_dawn) names(dawn) # reorder columns to ensure the species codes appear one after another dawn &lt;- dawn %&gt;% relocate(c(&quot;BFOW&quot;, &quot;SBEO&quot;, &quot;JUNI&quot;, &quot;ASKO&quot;, &quot;HSWO&quot;), .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dawn &lt;- separate(dawn, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dawn&quot;) # dusk data summer_dusk &lt;- read.csv(&quot;data/summer-dusk-annotations.csv&quot;) winter_dusk &lt;- read.csv(&quot;data/winter-dusk-annotations.csv&quot;) dusk &lt;- bind_rows(summer_dusk, winter_dusk) names(dusk) # reorder columns to ensure the species codes appear one after another dusk &lt;- dusk %&gt;% relocate(&quot;GREN&quot;, .after = &quot;CORO&quot;) # split the filename column into 4 columns : site, date, time and splits dusk &lt;- separate(dusk, col = Filename, into = c(&quot;site_id&quot;, &quot;date&quot;, &quot;time&quot;, &quot;splits&quot;), sep = &quot;_&quot;) %&gt;% dplyr::select(-(Birds:Notes)) %&gt;% # remove columns not required &amp; rename rename(., restoration_type = Restoration.Type..Benchmark.Active.Passive.) %&gt;% rename(., time_of_day = Time..Morning.Evening.Night.) %&gt;% mutate(time_of_day = &quot;dusk&quot;) # create a single dataframe acoustic_data &lt;- bind_rows(dawn, dusk) 2.3 Add standardized eBird species codes for future analysis species_codes &lt;- read.csv(&quot;data/species-annotation-codes.csv&quot;) ## Using the splice operator from an example on stackOverflow ## https://stackoverflow.com/questions/60113369/change-column-names-in-dataframe-based-on-matching-to-another-dataframe-by-dplyr eBirdCodes &lt;- species_codes %&gt;% dplyr::select(eBird_codes, species_annotation_codes) %&gt;% deframe() # replace current annotation codes with eBird codes acoustic_data &lt;- acoustic_data %&gt;% rename(!!!eBirdCodes) 2.4 How much data has been annotated for dawn and dusk across sites and days? # we observe that OLCAP5B has the least amount of data annotated (~3 unique days/visits) at dawn dawnSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dawn&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) # we observe that OLCAP5B has the least amount of data annotated (~3 unique visits) duskSampling &lt;- acoustic_data %&gt;% filter(time_of_day == &quot;dusk&quot;) %&gt;% dplyr::select(site_id, date) %&gt;% distinct() %&gt;% arrange(site_id) %&gt;% count(site_id) 2.5 More data cleaning # Here, we pivot the data to long format and remove NA/zero values or missing data acoustic_data &lt;- acoustic_data %&gt;% group_by(site_id, date, time, splits, time_of_day, restoration_type) %&gt;% transform() %&gt;% replace(is.na(.), 0) %&gt;% summarise_at(.vars = vars(c(&quot;compea&quot;:&quot;grenig1&quot;)), .funs = sum) %&gt;% pivot_longer(cols = compea:grenig1, names_to = &quot;eBird_codes&quot;, values_to = &quot;number&quot;) %&gt;% filter(number != 0) # one way to remove zeros # rename the `time` column as `start_time` to distinguish from `time_of_day` acoustic_data &lt;- acoustic_data %&gt;% rename(., start_time = time) # add hourOfDay column to indicate time-windows for when the acoustic-visit was started acoustic_data &lt;- acoustic_data %&gt;% mutate( hour_of_day = case_when( start_time &gt;= &quot;060000&quot; &amp; start_time &lt; &quot;070000&quot; ~ &quot;6AM to 7AM&quot;, start_time &gt;= &quot;070000&quot; &amp; start_time &lt; &quot;080000&quot; ~ &quot;7AM to 8AM&quot;, start_time &gt;= &quot;080000&quot; &amp; start_time &lt; &quot;090000&quot; ~ &quot;8AM to 9AM&quot;, start_time &gt;= &quot;090000&quot; &amp; start_time &lt;= &quot;100000&quot; ~ &quot;9AM to 10AM&quot;, start_time &gt;= &quot;160000&quot; &amp; start_time &lt; &quot;170000&quot; ~ &quot;4PM to 5PM&quot;, start_time &gt;= &quot;170000&quot; &amp; start_time &lt;= &quot;180000&quot; ~ &quot;5PM to 6PM&quot;, start_time &gt;= &quot;180000&quot; &amp; start_time &lt;= &quot;190000&quot; ~ &quot;6PM to 7PM&quot;)) %&gt;% ungroup() 2.6 Write to file write.csv(acoustic_data, &quot;results/acoustic_data.csv&quot;, row.names = F) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
